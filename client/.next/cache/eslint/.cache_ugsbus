[{"/Users/hanka/github/yeskrabickyflow/client/pages/_app.tsx":"1","/Users/hanka/github/yeskrabickyflow/client/pages/_document.tsx":"2","/Users/hanka/github/yeskrabickyflow/client/pages/api/auth/[...nextauth].ts":"3","/Users/hanka/github/yeskrabickyflow/client/pages/api/hello.ts":"4","/Users/hanka/github/yeskrabickyflow/client/pages/auth/login.tsx":"5","/Users/hanka/github/yeskrabickyflow/client/pages/index.tsx":"6","/Users/hanka/github/yeskrabickyflow/client/pages/pozadavky.tsx":"7","/Users/hanka/github/yeskrabickyflow/client/pages/protected.tsx":"8","/Users/hanka/github/yeskrabickyflow/client/components/Header.tsx":"9","/Users/hanka/github/yeskrabickyflow/client/components/Layout.tsx":"10","/Users/hanka/github/yeskrabickyflow/client/components/Main.tsx":"11","/Users/hanka/github/yeskrabickyflow/client/components/StatusUpdate.tsx":"12"},{"size":407,"mtime":1699892534796,"results":"13","hashOfConfig":"14"},{"size":275,"mtime":1699893232588,"results":"15","hashOfConfig":"14"},{"size":1318,"mtime":1699975551690,"results":"16","hashOfConfig":"14"},{"size":307,"mtime":1699798634410,"results":"17","hashOfConfig":"14"},{"size":2366,"mtime":1699977370512,"results":"18","hashOfConfig":"14"},{"size":1156,"mtime":1699894675803,"results":"19","hashOfConfig":"14"},{"size":5284,"mtime":1699980963095,"results":"20","hashOfConfig":"14"},{"size":256,"mtime":1699888098585,"results":"21","hashOfConfig":"14"},{"size":1357,"mtime":1699897012558,"results":"22","hashOfConfig":"14"},{"size":267,"mtime":1699972693257,"results":"23","hashOfConfig":"14"},{"size":139,"mtime":1699894827551,"results":"24","hashOfConfig":"14"},{"size":3156,"mtime":1699981177218,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"za2zxp",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/hanka/github/yeskrabickyflow/client/pages/_app.tsx",[],[],"/Users/hanka/github/yeskrabickyflow/client/pages/_document.tsx",[],[],"/Users/hanka/github/yeskrabickyflow/client/pages/api/auth/[...nextauth].ts",[],[],"/Users/hanka/github/yeskrabickyflow/client/pages/api/hello.ts",[],[],"/Users/hanka/github/yeskrabickyflow/client/pages/auth/login.tsx",[],[],"/Users/hanka/github/yeskrabickyflow/client/pages/index.tsx",[],[],"/Users/hanka/github/yeskrabickyflow/client/pages/pozadavky.tsx",["63"],[],"import React, { useEffect, useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport { DataGrid, GridColDef, GridValueGetterParams } from \"@mui/x-data-grid\";\nimport {\n  convertDateToISOString,\n  get_inquiries,\n  parseInquiryStatus,\n} from \"@/utils/helpers\";\nimport { Button, Container } from \"@mui/material\";\nimport { INQUIRIES_TABLE, STATUS, TRANSLATIONS } from \"@/utils/constants\";\nimport StatusUpdate from \"@/components/StatusUpdate\";\nimport { useSession } from \"next-auth/react\";\nimport { Router } from \"next/router\";\n\ninterface Inquiry {\n  id: string;\n  order_name: string;\n  order_id: number;\n  order_contact: string;\n  pause_start_date: string;\n  pause_end_date: string;\n  item_title: string;\n  new_end_date: string;\n  status: string;\n  request_date: string;\n}\n\nexport default function Inquiries() {\n  const [inquiries, setInquiries] = useState<Inquiry[]>([]);\n\n  const { status, data } = useSession();\n\n  useEffect(() => {\n    if (status === \"authenticated\") {\n      fetch_inquiries();\n    }\n  }, [status]);\n\n  const handleInquiries = (data: any) => {\n    setInquiries(data);\n  };\n\n  const fetch_inquiries = async () => {\n    const fetched_data = await get_inquiries();\n    handleInquiries(fetched_data);\n  };\n\n  if (status === \"authenticated\")\n    return (\n      <>\n        {inquiries.length > 0 ? (\n          <Box sx={{ width: \"100%\" }} className=\"p-8\">\n            <DataGrid\n              rows={inquiries}\n              rowSelection={false}\n              initialState={{\n                pagination: {\n                  paginationModel: {\n                    pageSize: 5,\n                  },\n                },\n              }}\n              rowHeight={75}\n              pageSizeOptions={[5]}\n              columns={[\n                {\n                  field: \"order_name\",\n                  headerName: INQUIRIES_TABLE.ORDER_NAME,\n                },\n                {\n                  field: \"order_contact\",\n                  headerName: INQUIRIES_TABLE.ORDER_CONTACT,\n                },\n                {\n                  field: \"item_title\",\n                  headerName: INQUIRIES_TABLE.ITEM,\n                  minWidth: 150,\n                },\n                {\n                  field: \"request_date\",\n                  headerName: INQUIRIES_TABLE.REQUEST_DATE,\n                  minWidth: 150,\n                  valueGetter: (params) => {\n                    if (!params.value) {\n                      return params.value;\n                    }\n                    return convertDateToISOString(params.value.split(\"T\")[0]);\n                  },\n                },\n                {\n                  field: \"pause_start_date\",\n                  headerName: INQUIRIES_TABLE.PAUSE_START_DATE,\n                  minWidth: 150,\n                  valueGetter: (params) => {\n                    if (!params.value) {\n                      return params.value;\n                    }\n                    return convertDateToISOString(params.value);\n                  },\n                },\n                {\n                  field: \"pause_end_date\",\n                  headerName: INQUIRIES_TABLE.PAUSE_END_DATE,\n                  minWidth: 150,\n                  valueGetter: (params) => {\n                    if (!params.value) {\n                      return params.value;\n                    }\n                    return convertDateToISOString(params.value);\n                  },\n                },\n                {\n                  field: \"new_end_date\",\n                  headerName: INQUIRIES_TABLE.NEW_END_DATE,\n                  minWidth: 150,\n                  valueGetter: (params) => {\n                    if (!params.value) {\n                      return params.value;\n                    }\n                    return convertDateToISOString(params.value);\n                  },\n                },\n                {\n                  field: \"status\",\n                  headerName: INQUIRIES_TABLE.STATUS,\n                  minWidth: 150,\n                  flex: 1,\n                  renderCell: (params) => {\n                    return (\n                      <>\n                        {params.value == STATUS.NEW ? (\n                          <StatusUpdate\n                            value={params.value}\n                            inquiryId={params.row.id}\n                            inquiries={inquiries}\n                            setInquiries={setInquiries}\n                          />\n                        ) : (\n                          <Button\n                            variant=\"outlined\"\n                            color={\n                              params.value == STATUS.APPROVED\n                                ? `success`\n                                : `error`\n                            }\n                            style={{ fontSize: \"12px\", padding: \"2px 4px\" }}\n                          >\n                            {parseInquiryStatus(params.value)}\n                          </Button>\n                        )}\n                      </>\n                    );\n                  },\n                },\n              ]}\n            />\n          </Box>\n        ) : (\n          <Container className=\"text-center p-10\">\n            {TRANSLATIONS.NO_INQUIRIES}\n          </Container>\n        )}\n      </>\n    );\n}\n","/Users/hanka/github/yeskrabickyflow/client/pages/protected.tsx",[],[],"/Users/hanka/github/yeskrabickyflow/client/components/Header.tsx",[],[],"/Users/hanka/github/yeskrabickyflow/client/components/Layout.tsx",[],[],"/Users/hanka/github/yeskrabickyflow/client/components/Main.tsx",[],[],"/Users/hanka/github/yeskrabickyflow/client/components/StatusUpdate.tsx",[],[],{"ruleId":"64","severity":1,"message":"65","line":37,"column":6,"nodeType":"66","endLine":37,"endColumn":14,"suggestions":"67"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetch_inquiries'. Either include it or remove the dependency array.","ArrayExpression",["68"],{"desc":"69","fix":"70"},"Update the dependencies array to be: [fetch_inquiries, status]",{"range":"71","text":"72"},[1016,1024],"[fetch_inquiries, status]"]